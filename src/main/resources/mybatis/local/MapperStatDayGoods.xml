<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mvc.dao.DaoStatDayGoods">
  <!-- Base_Column_List -->
  <sql id="Base_Column_List">
    `id`,
    `goods_id`,
    `day_no`,
    `order_num`,
    `goods_num`,
    `add_time`
  </sql>
  <!-- BaseResultMap -->
  <resultMap id="BaseResultMap" type="com.example.mvc.model.StatDayGoods">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
    <result column="day_no" jdbcType="INTEGER" property="dayNo"/>
    <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum"/>
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
  </resultMap>
  <!-- RelativeResultMap -->
  <resultMap id="RelativeResultMap" type="com.example.mvc.bean.rep.RepStatDayGoods$StatDayGoodsRow">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="goodsId" jdbcType="INTEGER" property="goodsId"/>
    <result column="onlineStatus" jdbcType="INTEGER" property="onlineStatus"/>
    <result column="onlineStatus_" jdbcType="VARCHAR" property="onlineStatus_" typeHandler="com.example.common.constant.EnumFieldHandler$HandleOnlineStatus"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="price" jdbcType="INTEGER" property="price"/>
    <result column="dayNo" jdbcType="INTEGER" property="dayNo"/>
    <result column="orderNum" jdbcType="INTEGER" property="orderNum"/>
    <result column="goodsNum" jdbcType="INTEGER" property="goodsNum"/>
    <result column="addTime" jdbcType="TIMESTAMP" property="addTime"/>
  </resultMap>
  <!-- DetailResultMap -->
  <resultMap id="DetailResultMap" type="com.example.mvc.bean.detail.DetailStatDayGoods">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="dayNo" jdbcType="INTEGER" property="dayNo"/>
    <result column="orderNum" jdbcType="INTEGER" property="orderNum"/>
    <result column="goodsNum" jdbcType="INTEGER" property="goodsNum"/>
    <result column="addTime" jdbcType="TIMESTAMP" property="addTime"/>
  </resultMap>
  <!-- insert -->
  <insert id="insert" parameterType="com.example.mvc.model.StatDayGoods" keyProperty="id" useGeneratedKeys="true">
    INSERT INTO `stat_day_goods`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test='goodsId != null'>
        `goods_id`,
      </if>
      <if test='dayNo != null'>
        `day_no`,
      </if>
      <if test='orderNum != null'>
        `order_num`,
      </if>
      <if test='goodsNum != null'>
        `goods_num`,
      </if>
      <if test='addTime != null'>
        `add_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test='goodsId != null'>
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test='dayNo != null'>
        #{dayNo,jdbcType=INTEGER},
      </if>
      <if test='orderNum != null'>
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test='goodsNum != null'>
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test='addTime != null'>
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <!-- insertEvenNull -->
  <insert id="insertEvenNull" parameterType="com.example.mvc.model.StatDayGoods" keyProperty="id" useGeneratedKeys="true">
    INSERT INTO `stat_day_goods` (
    <trim suffixOverrides=",">
      `goods_id`,
      `day_no`,
      `order_num`,
      `goods_num`,
      `add_time`,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{goodsId,jdbcType=INTEGER},
      #{dayNo,jdbcType=INTEGER},
      #{orderNum,jdbcType=INTEGER},
      #{goodsNum,jdbcType=INTEGER},
      #{addTime,jdbcType=TIMESTAMP},
    </trim>
    )
  </insert>
  <!-- update -->
  <update id="update" parameterType="com.example.mvc.model.StatDayGoods">
    UPDATE `stat_day_goods`
    <trim prefix="SET" suffixOverrides=",">
      <if test='goodsId != null'>
        `goods_id` = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test='dayNo != null'>
        `day_no` = #{dayNo,jdbcType=INTEGER},
      </if>
      <if test='orderNum != null'>
        `order_num` = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test='goodsNum != null'>
        `goods_num` = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test='addTime != null'>
        `add_time` = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    WHERE `id` = #{id,jdbcType=INTEGER}
  </update>
  <!-- updateEvenNull -->
  <update id="updateEvenNull" parameterType="com.example.mvc.model.StatDayGoods">
    UPDATE `stat_day_goods` SET
    <trim suffixOverrides=",">
      <if test='goodsId != null'>
        `goods_id` = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test='dayNo != null'>
        `day_no` = #{dayNo,jdbcType=INTEGER},
      </if>
      <choose>
        <when test='orderNum != null'>
          `order_num` = #{orderNum,jdbcType=INTEGER},
        </when>
        <otherwise>
          `order_num` = null,
        </otherwise>
      </choose>
      <choose>
        <when test='goodsNum != null'>
          `goods_num` = #{goodsNum,jdbcType=INTEGER},
        </when>
        <otherwise>
          `goods_num` = null,
        </otherwise>
      </choose>
      <choose>
        <when test='addTime != null'>
          `add_time` = #{addTime,jdbcType=TIMESTAMP},
        </when>
        <otherwise>
          `add_time` = null,
        </otherwise>
      </choose>
    </trim>
    WHERE `id` = #{id,jdbcType=INTEGER}
  </update>
  <!-- updateConditional -->
  <update id="updateConditional" parameterType="com.forsrc.common.spring.bean.param.ParamUpdate">
    UPDATE `stat_day_goods` SET
    <![CDATA[${updatePair}]]>
    <trim prefix="WHERE">
      <choose>
        <when test='primaryId != null'>
          `id` = #{primaryId,jdbcType=INTEGER}
        </when>
        <otherwise>
          <if test='condition != null and condition != ""'>
            <![CDATA[${condition}]]>
          </if>
        </otherwise>
      </choose>
    </trim>
  </update>
  <!-- delete -->
  <delete id="delete" parameterType="com.example.mvc.model.StatDayGoods">
    DELETE FROM `stat_day_goods`
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test='id != null'>
        AND `id` = #{id,jdbcType=INTEGER}
      </if>
      <if test='goodsId != null'>
        AND `goods_id` = #{goodsId,jdbcType=INTEGER}
      </if>
    </trim>
  </delete>
  <!-- deleteConditional -->
  <delete id="deleteConditional" parameterType="com.forsrc.common.spring.bean.param.ParamDelete">
    DELETE FROM `stat_day_goods`
    <trim prefix="WHERE">
      <choose>
        <when test='primaryId != null'>
          `id` = #{primaryId,jdbcType=INTEGER}
        </when>
        <otherwise>
          <if test='condition != null and condition != ""'>
            <![CDATA[${condition}]]>
          </if>
        </otherwise>
      </choose>
    </trim>
  </delete>
  <!-- selectByPrimary -->
  <select id="selectByPrimary" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM `stat_day_goods`
    WHERE `id` = #{id,jdbcType=INTEGER}
  </select>
  <!-- selectOne -->
  <select id="selectOne" parameterType="com.example.mvc.model.StatDayGoods" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM `stat_day_goods`
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test='id != null'>
        AND `id` = #{id,jdbcType=INTEGER}
      </if>
      <if test='goodsId != null'>
        AND `goods_id` = #{goodsId,jdbcType=INTEGER}
      </if>
      <if test='dayNo != null'>
        AND `day_no` = #{dayNo,jdbcType=INTEGER}
      </if>
      <if test='orderNum != null'>
        AND `order_num` = #{orderNum,jdbcType=INTEGER}
      </if>
      <if test='goodsNum != null'>
        AND `goods_num` = #{goodsNum,jdbcType=INTEGER}
      </if>
    </trim>
    LIMIT 1
  </select>
  <!-- select -->
  <select id="select" parameterType="com.example.mvc.model.StatDayGoods" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM `stat_day_goods`
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test='id != null'>
        AND `id` = #{id,jdbcType=INTEGER}
      </if>
      <if test='goodsId != null'>
        AND `goods_id` = #{goodsId,jdbcType=INTEGER}
      </if>
      <if test='dayNo != null'>
        AND `day_no` = #{dayNo,jdbcType=INTEGER}
      </if>
      <if test='orderNum != null'>
        AND `order_num` = #{orderNum,jdbcType=INTEGER}
      </if>
      <if test='goodsNum != null'>
        AND `goods_num` = #{goodsNum,jdbcType=INTEGER}
      </if>
    </trim>
    ORDER BY `id` DESC
  </select>
  <!-- sql_detailField -->
  <sql id="sql_detailField">
    <trim suffixOverrides=",">
      `stat_day_goods`.`id` AS `id`,
      `goods`.`name` AS `name`,
      `stat_day_goods`.`day_no` AS `dayNo`,
      `stat_day_goods`.`order_num` AS `orderNum`,
      `stat_day_goods`.`goods_num` AS `goodsNum`,
      `stat_day_goods`.`add_time` AS `addTime`,
    </trim>
  </sql>
  <!-- sql_detailTable -->
  <sql id="sql_detailTable">
    `stat_day_goods`
    JOIN `goods` AS `goods` ON `stat_day_goods`.`goods_id` = `goods`.`id`
  </sql>
  <!-- selectDetail -->
  <select id="selectDetail" parameterType="com.example.mvc.model.StatDayGoods" resultMap="DetailResultMap">
    SELECT
    <include refid="sql_detailField"/>
    FROM
    <include refid="sql_detailTable"/>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test='id != null'>
        AND `stat_day_goods`.`id` = #{id,jdbcType=INTEGER}
      </if>
      <if test='goodsId != null'>
        AND `stat_day_goods`.`goods_id` = #{goodsId,jdbcType=INTEGER}
      </if>
      <if test='dayNo != null'>
        AND `stat_day_goods`.`day_no` = #{dayNo,jdbcType=INTEGER}
      </if>
      <if test='orderNum != null'>
        AND `stat_day_goods`.`order_num` = #{orderNum,jdbcType=INTEGER}
      </if>
      <if test='goodsNum != null'>
        AND `stat_day_goods`.`goods_num` = #{goodsNum,jdbcType=INTEGER}
      </if>
    </trim>
    LIMIT 1
  </select>
  <!-- selectDetailByPrimary -->
  <select id="selectDetailByPrimary" parameterType="java.lang.Integer" resultMap="DetailResultMap">
    SELECT
    <include refid="sql_detailField"/>
    FROM
    <include refid="sql_detailTable"/>
    WHERE `stat_day_goods`.`id` = #{id,jdbcType=INTEGER}
  </select>
  <!-- sql_selectTable -->
  <sql id="sql_selectTable">
    `stat_day_goods`
    JOIN `goods` AS `goods` ON `stat_day_goods`.`goods_id` = `goods`.`id`
  </sql>
  <!-- sql_selectField -->
  <sql id="sql_selectField">
    `stat_day_goods`.`id` AS `id`,
    `stat_day_goods`.`goods_id` AS `goodsId`,
    `goods`.`online_status` AS `onlineStatus`, `goods`.`online_status` AS `onlineStatus_`,
    `goods`.`name` AS `name`,
    `goods`.`price` AS `price`,
    `stat_day_goods`.`day_no` AS `dayNo`,
    `stat_day_goods`.`order_num` AS `orderNum`,
    `stat_day_goods`.`goods_num` AS `goodsNum`,
    `stat_day_goods`.`add_time` AS `addTime`
  </sql>
  <!-- sql_selectCondition -->
  <sql id="sql_selectCondition">
    <if test='id != null'>
      AND `stat_day_goods`.`id` = #{id,jdbcType=INTEGER}
    </if>
    <if test='goodsId != null'>
      AND `stat_day_goods`.`goods_id` = #{goodsId,jdbcType=INTEGER}
    </if>
    <if test='dayNo != null'>
      <if test='dayNo.length > 0 and dayNo[0] != null'>
        AND `stat_day_goods`.`day_no` &gt;= #{dayNo.[0],jdbcType=INTEGER}
      </if>
      <if test='dayNo.length > 1 and dayNo[1] != null'>
        AND `stat_day_goods`.`day_no` &lt;= #{dayNo.[1],jdbcType=INTEGER}
      </if>
    </if>
    <if test='orderNum != null'>
      <if test='orderNum.length > 0 and orderNum[0] != null'>
        AND `stat_day_goods`.`order_num` &gt;= #{orderNum.[0],jdbcType=INTEGER}
      </if>
      <if test='orderNum.length > 1 and orderNum[1] != null'>
        AND `stat_day_goods`.`order_num` &lt;= #{orderNum.[1],jdbcType=INTEGER}
      </if>
    </if>
    <if test='goodsNum != null'>
      <if test='goodsNum.length > 0 and goodsNum[0] != null'>
        AND `stat_day_goods`.`goods_num` &gt;= #{goodsNum.[0],jdbcType=INTEGER}
      </if>
      <if test='goodsNum.length > 1 and goodsNum[1] != null'>
        AND `stat_day_goods`.`goods_num` &lt;= #{goodsNum.[1],jdbcType=INTEGER}
      </if>
    </if>
    <if test='addTime != null'>
      <if test='addTime.length > 0 and addTime[0] != null'>
        AND `stat_day_goods`.`add_time` &gt;= #{addTime.[0],jdbcType=TIMESTAMP}
      </if>
      <if test='addTime.length > 1 and addTime[1] != null'>
        AND `stat_day_goods`.`add_time` &lt;= #{addTime.[1],jdbcType=TIMESTAMP}
      </if>
    </if>
    <if test='innerCondition != null and innerCondition != ""'>
      AND <![CDATA[${innerCondition}]]>
    </if>
  </sql>
  <!-- selectTotal -->
  <select id="selectTotal" parameterType="com.example.mvc.bean.req.ReqStatDayGoods" resultType="Integer">
    SELECT COUNT(1) FROM
    <include refid="sql_selectTable"/>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <include refid="sql_selectCondition"/>
    </trim>
  </select>
  <!-- selectRelative -->
  <select id="selectRelative" parameterType="com.example.mvc.bean.req.ReqStatDayGoods" resultMap="RelativeResultMap">
    SELECT
    <include refid="sql_selectField"/>
    FROM
    <include refid="sql_selectTable"/>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <include refid="sql_selectCondition"/>
    </trim>
    <choose>
      <when test='orderBy != null and orderBy != ""'>
        ORDER BY <![CDATA[${orderBy}]]>
      </when>
      <otherwise>
        ORDER BY `stat_day_goods`.`id`
      </otherwise>
    </choose>
    <if test='desc == true'>
      DESC
    </if>
    <if test='startIndex >= 0 and pageSize > 0'>
      LIMIT #{startIndex, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
    </if>
  </select>
  <!-- selectRelativeMap -->
  <select id="selectRelativeMap" parameterType="com.example.mvc.bean.req.ReqStatDayGoods" resultType="java.util.Map">
    SELECT
    <include refid="sql_selectField"/>
    FROM
    <include refid="sql_selectTable"/>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <include refid="sql_selectCondition"/>
    </trim>
    <choose>
      <when test='orderBy != null and orderBy != ""'>
        ORDER BY <![CDATA[${orderBy}]]>
      </when>
      <otherwise>
        ORDER BY `stat_day_goods`.`id`
      </otherwise>
    </choose>
    <if test='desc == true'>
      DESC
    </if>
  </select>
  <!-- selectList -->
  <select id="selectList" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    <choose>
      <when test='queryField != null and queryField != ""'>
        <![CDATA[${queryField}]]>
      </when>
      <otherwise>
        *
      </otherwise>
    </choose>
    FROM (
    SELECT
    <include refid="sql_selectField"/>
    FROM
    <include refid="sql_selectTable"/>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <include refid="sql_selectCondition"/>
    </trim>
    <choose>
      <when test='orderBy != null and orderBy != ""'>
        ORDER BY <![CDATA[${orderBy}]]>
      </when>
      <otherwise>
        ORDER BY `stat_day_goods`.`id`
      </otherwise>
    </choose>
    <if test='desc == true'>
      DESC
    </if>
    <if test='startIndex >= 0 and rownum > 0'>
      LIMIT #{startIndex, jdbcType=INTEGER}, #{rownum, jdbcType=INTEGER}
    </if>
    ) t
  </select>
  <!-- selectMap -->
  <select id="selectMap" parameterType="com.forsrc.common.spring.bean.param.ParamQuery" resultType="java.util.Map">
    SELECT
    <choose>
      <when test='queryField != null and queryField != ""'>
        <![CDATA[${queryField}]]>
      </when>
      <otherwise>
        *
      </otherwise>
    </choose>
    FROM stat_day_goods
    <trim prefix="WHERE">
      <if test='condition != null and condition != ""'>
        <![CDATA[${condition}]]>
      </if>
    </trim>
    <choose>
      <when test='orderBy != null and orderBy != ""'>
        ORDER BY <![CDATA[${orderBy}]]>
      </when>
      <otherwise>
        ORDER BY `id`
      </otherwise>
    </choose>
    <if test='desc == true'>
      DESC
    </if>
    <if test='startIndex >= 0 and pageSize > 0'>
      LIMIT #{startIndex, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
    </if>
  </select>
  <!-- selectConditional -->
  <select id="selectConditional" parameterType="com.forsrc.common.spring.bean.param.ParamQuery" resultMap="BaseResultMap">
    SELECT
    <choose>
      <when test='queryField != null and queryField != ""'>
        <![CDATA[${queryField}]]>
      </when>
      <otherwise>
        *
      </otherwise>
    </choose>
    FROM stat_day_goods
    <trim prefix="WHERE">
      <if test='condition != null and condition != ""'>
        <![CDATA[${condition}]]>
      </if>
    </trim>
    <choose>
      <when test='orderBy != null and orderBy != ""'>
        ORDER BY <![CDATA[${orderBy}]]>
      </when>
      <otherwise>
        ORDER BY `id`
      </otherwise>
    </choose>
    <if test='desc == true'>
      DESC
    </if>
    <if test='startIndex >= 0 and pageSize > 0'>
      LIMIT #{startIndex, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
    </if>
  </select>
  <!-- selectSum -->
  <select id="selectSum" parameterType="com.forsrc.common.spring.bean.param.ParamQuery" resultType="Double">
    SELECT
    <choose>
      <when test='queryField != null and queryField != ""'>
        <![CDATA[${queryField}]]>
      </when>
      <otherwise>
        COUNT(1)
      </otherwise>
    </choose>
    FROM `stat_day_goods`
    <trim prefix="WHERE">
      <if test='condition != null and condition != ""'>
        <![CDATA[${condition}]]>
      </if>
    </trim>
  </select>
  <!-- sql_statField -->
  <sql id="sql_statField">
    order_detail.goods_id AS goods_id,
    CAST(DATE_FORMAT(order.pay_time, '%Y%m%d') AS DECIMAL) AS day_no,
    count(order.id) AS order_num,
    sum(order_detail.goods_num) AS goods_num
  </sql>
  <!-- sql_statTable -->
  <sql id="sql_statTable">
    order,order_detail
  </sql>
  <!-- sql_statWhere -->
  <sql id="sql_statWhere">
    AND order.id=order_detail.order_id and order.pay_status=1
  </sql>
  <!-- sql_statGroupBy -->
  <sql id="sql_statGroupBy">
    CAST(DATE_FORMAT(order.pay_time, '%Y%m%d') AS DECIMAL),
    order_detail.goods_id
  </sql>
  <!-- sql_statOrderBy -->
  <sql id="sql_statOrderBy">
    CAST(DATE_FORMAT(order.pay_time, '%Y%m%d') AS DECIMAL),
    order_detail.goods_id
  </sql>
  <!-- sql_statCondition -->
  <sql id="sql_statCondition">
    <if test='goodsId != null'>
      AND order_detail.goods_id = #{goodsId,jdbcType=INTEGER}
    </if>
    <if test='dayNo != null'>
      <if test='dayNo.length > 0 and dayNo[0] != null'>
        AND CAST(DATE_FORMAT(order.pay_time, '%Y%m%d') AS DECIMAL) &gt;= #{dayNo.[0],jdbcType=INTEGER}
      </if>
      <if test='dayNo.length > 1 and dayNo[1] != null'>
        AND CAST(DATE_FORMAT(order.pay_time, '%Y%m%d') AS DECIMAL) &lt; #{dayNo.[1],jdbcType=INTEGER}
      </if>
    </if>
  </sql>
  <!-- stat -->
  <select id="stat" parameterType="com.example.mvc.bean.req.ReqStatDayGoods" resultMap="BaseResultMap">
    SELECT
    <include refid="sql_statField"/>
    FROM
    <include refid="sql_statTable"/>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <include refid="sql_statWhere"/>
      <include refid="sql_statCondition"/>
    </trim>
    GROUP BY
    <include refid="sql_statGroupBy"/>
    ORDER BY
    <include refid="sql_statOrderBy"/>
  </select>
</mapper>